<div class="container mt-5">
    <div class="card shadow border-0">
        <div class="card-header bg-gradient-primary text-white">
            <h3 class="mb-0">Video redaktə et</h3>
        </div>
        <div class="card-body">
            <form id="updateForm" method="post" action="" enctype="multipart/form-data">
                <div class="mb-3">
                    <label for="videoTitle" class="form-label">Video başlığı</label>
                    <input type="text" class="form-control" id="videoTitle" name="videoTitle" required placeholder="Video başlığı">
                </div>

                <div class="mb-3">
                    <label for="videoUrl" class="form-label">Video URL</label>
                    <input type="text" class="form-control" id="videoUrl" name="videoUrl" required placeholder="Video URL">
                </div>
                <div class="mb-3">
                    <label for="videoDate" class="form-label">Video tarixi</label>
                    <input type="datetime-local" class="form-control" id="videoDate" name="videoDate">
                </div>
                <div class="mb-3">
                    <label for="videoStatus" class="form-label">Video statusu</label>
                    <select id="videoStatus" name="videoStatus">
                        <option value="true">Aktiv</option>
                        <option value="false">DeAktiv</option>
                    </select>
                </div>
                <button type="submit" class="btn btn-primary w-100">Göndər</button>
            </form>
        </div>
    </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
        // Production ortamına hazırlanan script

    const isProduction = window.location.hostname !== "localhost";
    const baseUrl = isProduction ? "https://api.yourdomain.com" : "https://localhost:44314";

    document.addEventListener("DOMContentLoaded", function () {
        // 'id'yi URL'den almak
        const path = window.location.pathname;
        const id = path.split('/').pop();
        console.log("ID: ", id);

        // API'den veri almak için
        fetch(`${baseUrl}/api/Youtube/video/${id}`)
            .then(response => {
                if (!response.ok) {
                    throw new Error("Video bilgisi alınamadı.");
                }
                return response.text();
            })
            .then(text => {
                const data = text ? JSON.parse(text) : {};
                console.log("Veri alındı: ", data);

                if (data) {
                    document.getElementById("videoTitle").value = data.videoTitle || "";
                    document.getElementById("videoUrl").value = data.videoUrl || "";

                    if (data.videoDate) {
                        const date = new Date(data.videoDate);
                        const formattedDate = date.toISOString().slice(0, 16);
                        document.getElementById("videoDate").value = formattedDate;
                    } else {
                        document.getElementById("videoDate").value = "";
                    }

                    document.getElementById("videoStatus").value = data.videoStatus ? "true" : "false";
                }
            })
            .catch(error => {
                console.error("API çağrısı başarısız:", error);
                Swal.fire({
                    icon: 'error',
                    title: 'Bir hata oluştu',
                    text: error.message || 'API çağrısı sırasında bir sorun oluştu.'
                });
            });

        // Formu gönderme işlemi
        document.getElementById("updateForm").addEventListener("submit", function(event) {
            event.preventDefault();

            const updatedVideo = {
                videoTitle: document.getElementById("videoTitle").value,
                videoUrl: document.getElementById("videoUrl").value,
                videoDate: document.getElementById("videoDate").value,
                videoStatus: document.getElementById("videoStatus").value === "true"
            };

            console.log("Gönderilen Veri: ", updatedVideo);

            // PUT isteği göndermek için
            fetch(`${baseUrl}/api/Youtube/edit/${id}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(updatedVideo)
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error("Video güncellenemedi.");
                }
                return response.text();
            })
            .then(text => {
                const result = text ? JSON.parse(text) : {};
                console.log("API Yanıtı:", result);
                Swal.fire({
                    icon: 'success',
                    title: 'Başarılı!',
                    text: 'Video başarıyla güncellendi.'
                }).then(() => {
                    window.location.replace("/Home/Ytvideos");
                });
            })
            .catch(error => {
                Swal.fire({
                    icon: 'error',
                    title: 'Bir hata oluştu',
                    text: error.message || 'API çağrısı başarısız oldu.'
                });
                console.error("API çağrısı başarısız:", error);
            });
        });
    });

</script>
