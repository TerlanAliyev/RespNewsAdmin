<style>
    body {
        background-color: #f8f9fe;
    }
</style>

<div class="container mt-5">
    <div class="card shadow border-0">
        <div class="card-header bg-gradient-primary text-white">
            <h3 class="mb-0">Inf əlavə et</h3>
        </div>
        <div class="card-body">
            <form id="categoryForm" method="post" action="" enctype="multipart/form-data">
                <div class="mb-3">
                    <label for="CategoryName" class="form-label">Link Adı</label>
                    <input type="text" class="form-control" id="LinkName" name="LinkName" required placeholder="adı">
                </div>
                <div class="mb-3">
                    <label for="CategoryUrl" class="form-label">Link URL</label>
                    <input type="text" class="form-control" id="LinkUrl" name="LinkUrl" required placeholder="LINK">
                </div>
                <div class="mb-3">
                    <label for="CategoryCoverFile" class="form-label">Link şəkli</label>
                    <input type="file" class="form-control" id="LinkCoverFile" name="LinkCoverFile">
                    <div id="coverPreview" style="margin-top: 10px;"></div>
                </div>
                <button type="submit" class="btn btn-primary w-100">Əlavə et</button>
            </form>
        </div>
    </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
     document.addEventListener("DOMContentLoaded", function () {
        const path = window.location.pathname;
        const id = path.split("/").pop();
        console.log("ID: ", id);

        // API'den veri almak
        fetch(`https://localhost:44314/api/Links/id/${id}`)
            .then(response => {
                if (!response.ok) {
                    throw new Error("Veri alınamadı.");
                }
                return response.json();
            })
            .then(data => {
                console.log("Veri alındı: ", data);
                if (data) {
                    document.getElementById("LinkName").value = data.linkName || "";
                    document.getElementById("LinkUrl").value = data.linkUrl || "";

                    const coverPreview = document.getElementById("coverPreview");
                    coverPreview.innerHTML = ""; // Mevcut önizlemeyi temizle

                    if (data.linkCoverUrl) {
                        const img = document.createElement("img");
                        img.src = `https://localhost:44314/${data.linkCoverUrl}`;
                        img.style.maxWidth = "200px";
                        img.style.maxHeight = "200px";
                        img.style.objectFit = "cover";
                        coverPreview.appendChild(img);
                    }
                }
            })
            .catch(error => {
                console.error("API çağrısı başarısız:", error);
                Swal.fire({
                    icon: "error",
                    title: "Bir hata oluştu",
                    text: error.message || "API çağrısı sırasında bir sorun oluştu."
                });
            });

        // Dosya seçimi durumunda eski önizlemeyi temizle ve yeni önizleme oluştur
        const fileInput = document.getElementById("LinkCoverFile");
        fileInput.addEventListener("change", function () {
            const coverPreview = document.getElementById("coverPreview");
            coverPreview.innerHTML = ""; // Eski önizlemeyi temizle

            if (fileInput.files.length > 0) {
                const file = fileInput.files[0];
                const img = document.createElement("img");
                const fileUrl = URL.createObjectURL(file);
                img.src = fileUrl;
                img.style.maxWidth = "200px";
                img.style.maxHeight = "200px";
                img.style.objectFit = "cover";
                coverPreview.appendChild(img);
            }
        });

        // Form gönderimi
            document.getElementById("categoryForm").addEventListener("submit", async function (event) {
        event.preventDefault();

        const formData = new FormData(event.target);

        // Fotoğraf seçilmişse, FormData'ya ekle
        const fileInput = document.getElementById("LinkCoverFile");
        if (fileInput.files.length > 0) {
            formData.append("LinkCoverUrl", fileInput.files[0]); // İsim "LinkCoverUrl" olmalı
        }

        try {
            const response = await fetch(`https://localhost:44314/api/Links/edit/${id}`, {
                method: "PUT",
                body: formData,
            });

            if (response.ok) {
                const result = await response.json();
                Swal.fire({
                    icon: "success",
                    title: "Başarılı!",
                    text: result.Message || "Link başarıyla güncellendi.",
                }).then(() => {
                    window.location.replace("/Home/Links");
                });
            } else {
                const errorText = await response.text();
                Swal.fire({
                    icon: "error",
                    title: "Hata!",
                    text: errorText,
                });
            }
        } catch (error) {
            console.error("İstek başarısız oldu:", error);
            Swal.fire({
                icon: "error",
                title: "Bağlantı Hatası",
                text: error.message,
            });
        }
    });

    });
</script>
