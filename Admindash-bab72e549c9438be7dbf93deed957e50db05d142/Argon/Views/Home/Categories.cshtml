
<style>
	body {
		background-color: #f8f9fe;
	}

	table {
		max-height: 100px!important;
		overflow: scroll;
	}
	.table-container {
		padding: 20px;
	}

	.status.active {
		color: #28a745;
		font-weight: bold;
	}

	.status.inactive {
		color: #dc3545;
		font-weight: bold;
	}

	hr {
		background-color: black;
	}

	pagination {
		ul

	{
		li

	{
		padding: 10px;
	}

	}
	}

</style>
<hr />
<div class="row d-flex justify-content-center mt-5">
	<div class="d-flex justify-content-center align-items-center">
		<a href="/Home/PostCategory" class="btn btn-primary btn-lg">
			Kateqoriya Əlavə et
		</a>
	</div>
	<hr />
<section class="other" style="margin-top:10px;">
	<div class="container-fluid py-4">
		<div class="row">
			@foreach (var category in (List<Argon.Models.CategoryNews>)ViewData["CategoryNewsList"])
			{
				<div class="col-xl-3 col-sm-6 mb-xl-0 mb-4 mt-3">
					<div class="card">
						<div class="card-body p-3">
							<div class="row">
								<div class="col-8">
									<div class="numbers">
										<span class="text-success text-sm font-weight-bolder">@category.CategoryName</span>
										<h5 class="font-weight-bolder">
											@category.NewsCount
										</h5>
									</div>
								</div>
								<div class="col-4 text-end">
									<div class="icon icon-shape bg-gradient-primary shadow-primary text-center rounded-circle">
										<i class="fa-solid fa-list"></i>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
			}
		</div>
	</div>
</section>
	<hr />

<main class="main-content position-relative border-radius-lg">	

	<div class="container-fluid py-4 ">
		<div class="row d-flex justify-content-center">
			<div class="col-xl-12 col-sm-6 mb-xl-0 mb-4 d-flex align-content-center justify-content-around">
				<div class="card col-3 " id="azelang">
					<div class="card-body p-3 ">
						<div class="row">
							<div class="col-8">
								<div class="numbers ">
									<p class="text-sm mb-0 text-uppercase font-weight-bold">Azerbaycan dilinde</p>
									<h5 class="font-weight-bolder">
										@ViewData["CategoryCountAze"]
									</h5>

								</div>
							</div>
							<div class="col-4 text-end">
								<div class="icon icon-shape bg-gradient-primary shadow-primary text-center rounded-circle" style="display:grid;place-items:center;color:white;">
									AZ
								</div>
							</div>
						</div>
					</div>
				</div>
				<div class="card col-3" id="enlang">
					<div class="card-body p-3">
						<div class="row">
							<div class="col-8">
								<div class="numbers ">
									<p class="text-sm mb-0 text-uppercase font-weight-bold">Ingilis dilinde</p>
									<h5 class="font-weight-bolder">
										@ViewData["CategoryCountEng"]
									</h5>

								</div>
							</div>
							<div class="col-4 text-end">
								<div class="icon icon-shape bg-gradient-primary shadow-primary text-center rounded-circle" style="display:grid;place-items:center;color:white;">
									EN
								</div>
							</div>
						</div>
					</div>
				</div>
				<div class="card col-3" id="rulng">
					<div class="card-body p-3">
						<div class="row">
							<div class="col-8">
								<div class="numbers ">
									<p class="text-sm mb-0 text-uppercase font-weight-bold">Rus dilinde</p>
									<h5 class="font-weight-bolder">
										@ViewData["CategoryCountRus"]
									</h5>

								</div>
							</div>
							<div class="col-4 text-end">
								<div class="icon icon-shape bg-gradient-primary shadow-primary text-center rounded-circle" style="display:grid;place-items:center;color:white;">
									RU
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>

	</div>
	
</main>

<br />
<hr />
<div class="container-fluid py-2 ">
	<div class="container mt-4">
		<h1 class="text-center mb-4">Kateqoriya Yönetimi</h1>
		<div class="card shadow">
			<div class="card-header bg-primary text-white">
				<h4 class="mb-0">Kateqoriya Tablosu</h4>
			</div>
			<div class="card-body">
				<div class="table-responsive">
					<div class="container mt-4">
						<table class="table table-hover align-middle">
							<thead class="table-light">
								<tr>
									<th scope="col">#</th>
									<th scope="col">Başlıq</th>
									<th scope="col">Şəkil</th>
									<th scope="col">Status</th>
									<th scope="col">Əməliyyatlar</th>
								</tr>
							</thead>
							<tbody id="categoryTableBody"></tbody>
						</table>
					</div>

				</div>
			</div>
		</div>
	</div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
	const apiUrl = "https://localhost:44314/api/category/all/"; // API URL'i
	const tableBody = document.querySelector("#categoryTableBody"); // Tabloyu dolduracağımız alan
			const apiUrlAzerbaijan = "https://localhost:44314/api/category/language/1"; // Azerbaycan dilindeki kategoriler
	const apiUrlEnglish = "https://localhost:44314/api/category/language/2"; // İngilizce dilindeki kategoriler
	const apiUrlRussian = "https://localhost:44314/api/category/language/3"; // Rusça dilindeki kategoriler


		// Kategorileri API'den çekip tabloya ekler
	function fetchCategories(language) {
		tableBody.innerHTML = ""; // Önceki verileri temizle
		let apiUrl;

		// Dil seçeneğine göre API URL'ini belirle
		if (language === "1") {
			apiUrl = apiUrlAzerbaijan;
		} else if (language === "2") {
			apiUrl = apiUrlEnglish;
		} else if (language === "3") {
			apiUrl = apiUrlRussian;
		}

		// Fetch işlemi
		fetch(apiUrl)
			.then((response) => {
				if (!response.ok) {
					throw new Error("Kateqoriyalar gətirilə bilmədi.");
				}
				return response.json();
			})
			.then((categories) => {
				categories.forEach((category, index) => {
					const row = document.createElement("tr");
					row.innerHTML = `
						<td>${index + 1}</td>
						<td>${category.categoryName}</td>
						<td>
							${category.categoryCoverUrl?.length > 0 ? `
							<img src="${category.categoryCoverUrl}" alt="Kateqoriya Fotoğrafı" style="width: 50px; height: 50px; object-fit: cover;">
							` : "Şəkil yoxdur"}
						</td>
						<td>
							<span class="btn btn-lg status ${category.categoryStatus ? "active" : "inactive"}">
								${category.categoryStatus ? "Aktiv" : "Passiv"}
							</span>
						</td>
						 <td>
								<a class="text-danger deleteNews btn" data-id="${category.categoryId}">
									<i class="fa-solid fa-trash"></i>
								</a>
						</td>
					`;
					tableBody.appendChild(row);
				});
			})
			.catch((error) => {
				console.error("Hata:", error);

				// SweetAlert ile hata mesajı
				Swal.fire({
					title: 'Xəta!',
					text: 'Kateqoriyalar gətirilərkən bir xəta baş verdi.',
					icon: 'error',
					confirmButtonText: 'Bağla'
				});
			});
	}

	// Dil butonlarına event listener ekleyelim
	document.getElementById("azelang").addEventListener("click", () => {
		fetchCategories("1"); // Azerbaycan dilini temsil eder
	});

	document.getElementById("enlang").addEventListener("click", () => {
		fetchCategories("2"); // İngilizce dilini temsil eder
	});

	document.getElementById("rulng").addEventListener("click", () => {
		fetchCategories("3"); // Rusça dilini temsil eder
	});

	tableBody.addEventListener("click", (e) => {
		const statusButton = e.target.closest(".status");
		if (statusButton) {
			const row = statusButton.closest("tr");
			const newsId = row.querySelector(".deleteNews").getAttribute("data-id");
			const currentStatus = statusButton.textContent.trim() === "Aktiv";
			const newStatus = !currentStatus;

			// PUT isteği ile yeni durumu gönder
			fetch(`https://localhost:44314/api/category/${newsId}/visibility`, {
				method: "PUT",  // PUT metodu kullanıyoruz
				headers: {
					"Content-Type": "application/json",
				},
				body: JSON.stringify({ IsVisible: newStatus }), // `IsVisible` alanını gönderiyoruz
			})
			.then((response) => {
				if (response.ok) {
					statusButton.textContent = newStatus ? "Aktiv" : "Passiv";
					statusButton.classList.toggle("active", newStatus);
					statusButton.classList.toggle("inactive", !newStatus);

					// SweetAlert ile başarılı mesajı
					Swal.fire({
						title: 'Uğurlu!',
						text: 'Xəbər statusu uğurla yenilendi!',
						icon: 'success',
						confirmButtonText: 'Bağla'
					});
				} else {
					throw new Error("Durum güncellenemedi.");
				}
			})
			.catch((error) => {
				console.error("Hata:", error);

				// SweetAlert ile hata mesajı
				Swal.fire({
					title: 'Xəta!',
					text: 'Status yenilənərkən bir xəta baş verdi.',
					icon: 'error',
					confirmButtonText: 'Bağla'
				});
			});
		}
	});
		// DELETE isteği atan fonksiyon
	function deleteNews(id) {
		Swal.fire({
			title: 'Emin misiniz?',
			text: "Bu haberi silmek istediğinizden emin misiniz?",
			icon: 'warning',
			showCancelButton: true,
			confirmButtonColor: '#3085d6',
			cancelButtonColor: '#d33',
			confirmButtonText: 'Evet, sil!',
			cancelButtonText: 'Hayır, iptal et!'
		}).then((result) => {
			if (result.isConfirmed) {
				fetch(`https://localhost:44314/api/category/${id}`, {
					method: "DELETE", // HTTP DELETE metodu
					headers: {
						"Content-Type": "application/json" // Gerekli ise content-type ekleyebilirsiniz
					}
				})
				.then(response => {
					if (response.ok) {
						Swal.fire(
							'Haber Silindi!',
							'Haber başarıyla silindi.',
							'success'
						);
						// Sayfada UI güncellemesi (örneğin, tablodan satırı kaldırabilirsiniz)
						document.querySelector(`#news-${id}`)?.remove();
					} else if (response.status === 404) {
						Swal.fire(
							'Hata!',
							'Haber bulunamadı.',
							'error'
						);
					} else {
						Swal.fire(
							'Hata!',
							'Haber silinemedi. Hata kodu: ' + response.status,
							'error'
						);
					}
				})
				.catch(error => {
					console.error("Bir hata oluştu:", error);
					Swal.fire(
						'Sunucu Hatası!',
						'Sunucuya ulaşılamadı. Lütfen tekrar deneyin.',
						'error'
					);
				});
			}
		});
	}


	// Örnek: Bir buton tıklanma olayına bağlama
	document.addEventListener("click", function (e) {
		if (e.target.classList.contains("deleteNews")) {
			const newsId = e.target.getAttribute("data-id");
			deleteNews(newsId);
		}
	});

</script>


