<style>
	body {
		background-color: #f8f9fe;
		font-family: Arial, sans-serif;
		color: #333;
		margin: 0;
		padding: 0;
	}

	.table-container {
		padding: 20px;
	}

	.status.active {
		color: #28a745;
		font-weight: bold;
	}

	.status.inactive {
		color: #dc3545;
		font-weight: bold;
	}

	hr {
		background-color: black;
	}

	.add-news-btn {
		width: 60px;
		height: 60px;
		border-radius: 50%;
		display: flex;
		justify-content: center;
		align-items: center;
		background-color: #007bff;
		color: white;
		font-size: 24px;
		box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
		position: fixed;
		bottom: 20px;
		right: 20px;
		z-index: 1000;
		text-decoration: none;
	}

	.card {
		border: none;
		border-radius: 8px;
		box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
	}

	#searchInput {
		border: 1px solid #ddd;
		border-radius: 20px;
		padding: 10px 20px;
		width: 100%;
		max-width: 400px;
	}

	#searchButton {
		border-radius: 20px;
		margin-left: 10px;
	}

	.search-container {
		display: flex;
		justify-content: center;
		margin-bottom: 20px;
	}

	.pagination .page-item .page-link {
		color: #007bff;
		border: 1px solid #ddd;
		margin: 0 5px;
		border-radius: 50%;
	}

	.pagination .page-item.active .page-link {
		background-color: #007bff;
		color: white;
	}
</style>

<main class="main-content position-relative border-radius-lg">
	<div class="row d-flex justify-content-center mt-5">
		<a href="/Home/PostAdvert" class="add-news-btn">
			<i class="fa fa-plus"></i>
		</a>
	</div>
</main>

<div class="container-fluid py-2">
	<div class="container mt-4">
		<h1 class="text-center mb-4">Reklamlar</h1>
		<div class="card shadow">
			<div class="card-header bg-primary text-white">
				<h4 class="mb-0">Reklam cədvəli</h4>
			</div>
			<div class="card-body">
				<div class="table-responsive">
					<table class="table table-hover align-middle">
						<thead class="table-light">
							<tr>
								<th scope="col">#</th>
								<th scope="col">Ad</th>
								<th scope="col">Kontenti</th>
								<th scope="col">Şəkil</th>
								<th scope="col">Video</th>
								<th scope="col">Status</th>
								<th scope="col">Əməliyyatlar</th>
							</tr>
						</thead>
						<tbody id="categoryTableBody"></tbody>
					</table>
				</div>
			</div>
		</div>
	</div>
</div>


<!-- Bootstrap JS -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.perfect-scrollbar/1.5.5/perfect-scrollbar.min.js"></script>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
<!-- SweetAlert2 CDN -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<!-- SweetAlert2 CSS -->
<link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">







<script>

		const apiUrl = "https://localhost:44314/api/advert/adverts";
	const baseUrl = "https://localhost:44314"; // API'nin temel URL'si
	const tableBody = document.querySelector("tbody");
					console.log(apiUrl)
					console.log(baseUrl)


	function fetchNews() {
		const url = new URL(apiUrl); // Sayfa parametresi kaldırıldı
							console.log(url)

		fetch(url)
			.then((response) => {
				if (!response.ok) {
					throw new Error("Videolar getirilemedi");
				}
				return response.json();
			})
			.then((newsItems) => {
				if (newsItems.length === 0) {
					tableBody.innerHTML = "<tr><td colspan='5'>Sonuç bulunamadı.</td></tr>";
					return;
				}

				newsItems.forEach((newsItem, index) => {
					console.log(newsItem)
					const row = document.createElement("tr");
					row.innerHTML = `
						<td>${index + 1}</td>
						<td>${newsItem.advertName}</td>
						<td>${newsItem.advertContext}</td>
						<td>
							${newsItem.advertCoverUrl?.length > 0 ? `
							<img src="${baseUrl}${newsItem.advertCoverUrl}" alt="Reklam photo" style="width: 50px; height: 50px; object-fit: cover;">
							` : "Şəkil yoxdur"}
						</td>
						<td>
							${newsItem.advertVideoUrl?.length > 0 ? `
							<img src="${baseUrl}${newsItem.advertVideoUrl}" alt="Reklam videosu" style="width: 50px; height: 50px; object-fit: cover;">
							` : "Şəkil yoxdur"}
						</td>
							<td>
		<span class="btn btn-lg status ${newsItem.advertVisibility ? "active" : "inactive"}" data-id="${newsItem.advertId}">
			${newsItem.advertVisibility ? "Aktiv" : "Passiv"}
		</span>
	</td>

						<td>
							<a class="text-danger deleteNews btn" data-id="${newsItem.advertId}">
								<i class="fa-solid fa-trash"></i>
							</a>
						</td>
					`;
					tableBody.appendChild(row);
				});
			})
			.catch((error) => {
				console.error("Hata:", error);
				alert("Bir hata oluştu: " + error.message);
			});
	}
	fetchNews()


	tableBody.addEventListener("click", (e) => {
		const statusButton = e.target.closest(".status");
		if (statusButton) {
			const row = statusButton.closest("tr");
			const newsId = row.querySelector(".deleteNews").getAttribute("data-id");
			const currentStatus = statusButton.textContent.trim() === "Aktiv";
			const newStatus = !currentStatus;
		}
	});


		tableBody.addEventListener("click", (e) => {
		const statusButton = e.target.closest(".status");
		if (statusButton) {
			const logoId = statusButton.getAttribute("data-id");
			const currentStatus = statusButton.textContent.trim() === "Aktiv";
			const logoVisibility = !currentStatus;

			// PUT isteği ile yeni durumu gönder
			fetch(`https://localhost:44314/api/advert/${advertId}/visibility`, {
				method: "PUT",
				headers: {
					"Content-Type": "application/json",
				},
				body: JSON.stringify({ IsVisible: logoVisibility }),
			})
			.then((response) => {
				if (!response.ok) {
					return response.json().then((data) => {
						throw new Error(data.message || "Durum güncellenemedi.");
					});
				}
				// Başarılı yanıt
				statusButton.textContent = logoVisibility ? "Aktiv" : "Passiv";
				if (logoVisibility) {
					statusButton.classList.add("active");
					statusButton.classList.remove("inactive");
				} else {
					statusButton.classList.add("inactive");
					statusButton.classList.remove("active");
				}
				Swal.fire({
					title: 'Uğurlu!',
					text: 'Xəbər statusu uğurla yeniləndi!',
					icon: 'success',
					confirmButtonText: 'Bağla'
				});
			})
			.catch((error) => {
				console.error("Hata:", error);
				Swal.fire({
					title: 'Xəta!',
					text: 'Status yenilənərkən bir xəta baş verdi.',
					icon: 'error',
					confirmButtonText: 'Bağla'
				});
			});
		}
	});

	// DELETE isteği atan fonksiyon
	function deleteNews(id) {
		Swal.fire({
			title: 'Əminsiz?',
			text: "Bu kateqoriyanı silmək istədiyinizə əminsiz?",
			icon: 'warning',
			showCancelButton: true,
			confirmButtonColor: '#3085d6',
			cancelButtonColor: '#d33',
			confirmButtonText: 'Bəli, sil!',
			cancelButtonText: 'Xeyr,ləğv et!'
		}).then((result) => {
			if (result.isConfirmed) {
				fetch(`https://localhost:44314/api/logo/delete/${id}`, {
					method: "DELETE", // HTTP DELETE metodu
					headers: {
						"Content-Type": "application/json" // Gerekli ise content-type ekleyebilirsiniz
					}
				})
				.then(response => {
					if (response.ok) {
						Swal.fire(
								'Kateqoriya  Silindi!',
								'Kateqoriya  müvəffəqiyyətlə silindi.',
							'success'
						).then(() => {
							// Sayfayı yenile
							location.reload();
						});
						// Sayfada UI güncellemesi (örneğin, tablodan satırı kaldırabilirsiniz)
						document.querySelector(`#news-${id}`)?.remove();
					} else if (response.status === 404) {
						Swal.fire(
							'Xəta!',
							'Kateqoriya  tapılmadı.',
							'error'
						);
					} else {
						Swal.fire(
							'Xəta',
							'Kateqoriya silinə bilmədi. Xəta kodu: ' + response.status,
							'error'
						);
					}
				})
				.catch(error => {
					console.error("Xəta baş verdi:", error);
					Swal.fire(
						'Server Xətası',
						'Serverə müraciət oluna bilmədi.Bir daha sınayın.',
						'error'
					);
				});
			}
		});
	}


	// Örnek: Bir buton tıklanma olayına bağlama
	document.addEventListener("click", function (e) {
		if (e.target.classList.contains("deleteNews")) {
			const newsId = e.target.getAttribute("data-id");
			deleteNews(newsId);
		}
	});



</script>
