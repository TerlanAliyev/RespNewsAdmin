<style>
    body {
        background-color: #f8f9fe;
        font-family: Arial, sans-serif;
        color: #333;
        margin: 0;
        padding: 0;
    }

    .table-container {
        padding: 20px;
    }

    .status.active {
        color: #28a745;
        font-weight: bold;
    }

    .status.inactive {
        color: #dc3545;
        font-weight: bold;
    }

    hr {
        background-color: black;
    }

    .add-news-btn {
        width: 60px;
        height: 60px;
        border-radius: 50%;
        display: flex;
        justify-content: center;
        align-items: center;
        background-color: #007bff;
        color: white;
        font-size: 24px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        position: fixed;
        bottom: 20px;
        right: 20px;
        z-index: 1000;
        text-decoration: none;
    }

    .card {
        border: none;
        border-radius: 8px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    #searchInput {
        border: 1px solid #ddd;
        border-radius: 20px;
        padding: 10px 20px;
        width: 100%;
        max-width: 400px;
    }

    #searchButton {
        border-radius: 20px;
        margin-left: 10px;
    }

    .search-container {
        display: flex;
        justify-content: center;
        margin-bottom: 20px;
    }

    .pagination .page-item .page-link {
        color: #007bff;
        border: 1px solid #ddd;
        margin: 0 5px;
        border-radius: 50%;
    }

    .pagination .page-item.active .page-link {
        background-color: #007bff;
        color: white;
    }
</style>

<main class="main-content position-relative border-radius-lg">
    <div class="row d-flex justify-content-center mt-5">
        <a href="/Home/PostVideos" class="add-news-btn">
            <i class="fa fa-plus"></i>
        </a>
    </div>
</main>

<div class="container-fluid py-2">
    <div class="container mt-4">
        <h1 class="text-center mb-4">Videolar</h1>
        <div class="search-container">
            <input type="text" id="searchInput" placeholder="Video axtar..." class="form-control" />
            <button id="searchButton" class="btn btn-primary" style="margin:0px 10px;">Axtar</button>
        </div>
        <div class="card shadow">
            <div class="card-header bg-primary text-white">
                <h4 class="mb-0">Youtube cədvəli</h4>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-hover align-middle">
                        <thead class="table-light">
                            <tr>
                                <th scope="col">#</th>
                                <th scope="col">Video</th>
                                <th scope="col">Ad</th>
                                <th scope="col">Tarix</th>
                                <th scope="col">Əməliyyatlar</th>
                            </tr>
                        </thead>
                        <tbody id="categoryTableBody"></tbody>
                    </table>
                </div>
            </div>
        </div>
        <nav aria-label="Pagination" class="mt-4">
            <ul class="pagination justify-content-center">
                <li class="page-item">
                    <button class="page-link" id="prevPage" disabled>
                        <i class="fa-solid fa-arrow-left"></i>
                    </button>
                </li>
                <li class="page-item">
                    <span class="page-link" id="currentPage">1</span>
                </li>
                <li class="page-item">
                    <button class="page-link" id="nextPage">
                        <i class="fa-solid fa-arrow-right"></i>
                    </button>
                </li>
            </ul>
        </nav>
    </div>
</div>


    <!-- Bootstrap JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.perfect-scrollbar/1.5.5/perfect-scrollbar.min.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <!-- SweetAlert2 CDN -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <!-- SweetAlert2 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">


<script>
        // Production environment script

    const isProduction = window.location.hostname !== "localhost";
    const baseUrl = isProduction ? "https://api.yourdomain.com" : "https://localhost:44314";

    let page = 0; // Page number

    // Search videos
    function searchVideos(query) {
        fetch(`${baseUrl}/api/search/videos/${encodeURIComponent(query)}/${page}`, {
            method: "GET",
            headers: {
                "Content-Type": "application/json",
            },
        })
            .then((response) => {
                if (!response.ok) {
                    return response.text().then((text) => {
                        throw new Error(text);
                    });
                }
                return response.json();
            })
            .then((data) => {
                const tableBody = document.querySelector("tbody");
                tableBody.innerHTML = ""; // Clear existing results

                if (data.length === 0) {
                    tableBody.innerHTML = "<tr><td colspan='5'>No results found.</td></tr>";
                    return;
                }

                data.forEach((newsItem, index) => {
                    const row = document.createElement("tr");
                    row.innerHTML = `
                        <td>${index + 1 + page * 10}</td>
                        <td>
                            <iframe src="${convertToEmbedUrl(newsItem.videoUrl)}" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>
                        </td>
                        <td>${newsItem.videoTitle}</td>
                        <td>${new Date(newsItem.videoDate).toLocaleDateString()}</td>
                        <td>
                            <a href="/Home/PutYT/${newsItem.videoId}" class="text-primary me-2 btn">
                                <i class="fa-solid fa-pen"></i>
                            </a>
                            <a class="text-danger deleteNews btn" data-id="${newsItem.videoId}">
                                <i class="fa-solid fa-trash"></i>
                            </a>
                        </td>
                    `;
                    tableBody.appendChild(row);
                });
            })
            .catch((error) => {
                console.error("Error:", error);
                Swal.fire({
                    icon: 'error',
                    title: 'Search Error',
                    text: `An error occurred while processing the request: ${error.message}`,
                    confirmButtonText: 'Close'
                });
            });
    }

    document.getElementById("searchButton").addEventListener("click", () => {
        const query = document.getElementById("searchInput").value.trim();

        if (!query) {
            Swal.fire({
                icon: 'warning',
                title: 'Search Warning',
                text: 'Search query cannot be empty!',
                confirmButtonText: 'Close'
            });
            return;
        }

        searchVideos(query);
    });

    // Convert YouTube URL to embed URL
    function convertToEmbedUrl(url) {
        if (!url) {
            console.error("URL is undefined or null");
            return null;
        }

        url = url.split('?')[0]; // Remove parameters

        const regex = /(?:youtu\.be\/|youtube\.com\/(?:[^\/]+\/[^\/]+\/|(?:v|e(?:mbed)?)\/|.*[?&]v=))([a-zA-Z0-9_-]{11})/;
        const match = url.match(regex);
        if (match && match[1]) {
            return `https://www.youtube.com/embed/${match[1]}`;
        }

        console.error("Invalid video URL:", url);
        return null;
    }

    // Fetch videos for pagination
    function fetchVideos(page) {
        const tableBody = document.querySelector("tbody");
        tableBody.innerHTML = ""; // Clear previous data

        const url = new URL(`${baseUrl}/api/Youtube/videos/${page}`);
        fetch(url)
            .then((response) => {
                if (!response.ok) {
                    throw new Error("Failed to fetch videos.");
                }
                return response.json();
            })
            .then((videos) => {
                if (videos.length === 0) {
                    document.getElementById("nextPage").disabled = true;
                    if (page > 0) page--;
                    return;
                }

                videos.forEach((video, index) => {
                    const row = document.createElement("tr");
                    row.innerHTML = `
                        <td>${index + 1 + page * 10}</td>
                        <td>
                            <iframe src="${convertToEmbedUrl(video.videoUrl)}" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>
                        </td>
                        <td>${video.videoTitle}</td>
                        <td>${new Date(video.videoDate).toLocaleDateString()}</td>
                        <td>
                            <a href="/Home/PutYT/${video.videoId}" class="text-primary me-2 btn">
                                <i class="fa-solid fa-pen"></i>
                            </a>
                            <a class="text-danger deleteNews btn" data-id="${video.videoId}">
                                <i class="fa-solid fa-trash"></i>
                            </a>
                        </td>
                    `;
                    tableBody.appendChild(row);
                });

                document.getElementById("nextPage").disabled = videos.length < 10;
            })
            .catch((error) => {
                console.error("Error:", error);
            });
    }

    // Initial fetch
    fetchVideos(page);

    document.getElementById("prevPage").addEventListener("click", () => {
        if (page > 0) {
            page--;
            fetchVideos(page);
            document.getElementById("currentPage").textContent = page + 1;
            document.getElementById("nextPage").disabled = false;
        }
    });

    document.getElementById("nextPage").addEventListener("click", () => {
        page++;
        fetchVideos(page);
        document.getElementById("currentPage").textContent = page + 1;
        document.getElementById("prevPage").disabled = page === 0;
    });

    // Delete video
    function deleteVideo(id) {
        Swal.fire({
            title: "Are you sure?",
            text: "Do you really want to delete this video? This action cannot be undone!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes, delete!",
            cancelButtonText: "No, cancel!"
        }).then((result) => {
            if (result.isConfirmed) {
                fetch(`${baseUrl}/api/Youtube/delete/${id}`, {
                    method: "DELETE",
                    headers: {
                        "Content-Type": "application/json"
                    }
                })
                    .then(response => {
                        if (response.ok) {
                            Swal.fire(
                                "Deleted!",
                                "Video has been deleted successfully.",
                                "success"
                            ).then(() => {
                                fetchVideos(page); // Refresh the page
                            });
                        } else {
                            throw new Error(`Error: ${response.status}`);
                        }
                    })
                    .catch(error => {
                        console.error("Error occurred:", error);
                        Swal.fire("Server Error!", "Could not reach the server. Please try again.", "error");
                    });
            }
        });
    }

    document.addEventListener("click", function (e) {
        if (e.target.classList.contains("deleteNews")) {
            const videoId = e.target.getAttribute("data-id");
            deleteVideo(videoId);
        }
    });

</script>
   